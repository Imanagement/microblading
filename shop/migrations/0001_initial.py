# Generated by Django 3.2.5 on 2021-12-16 10:39

import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import filer.fields.image


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        migrations.swappable_dependency(settings.FILER_IMAGE_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Basket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата открытия корзины')),
                ('ordered_date', models.DateTimeField(verbose_name='Дата заказа корзины')),
                ('basket_changed_date', models.DateField(blank=True, null=True, verbose_name='Дата изменения корзины')),
                ('ordered', models.BooleanField(default=False, verbose_name='Заказан')),
            ],
            options={
                'verbose_name': 'Корзина',
                'verbose_name_plural': 'Корзины',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=155, verbose_name='Название')),
                ('price', models.IntegerField(verbose_name='Цена')),
                ('discount_price', models.IntegerField(blank=True, null=True, verbose_name='Скидочная цена')),
                ('slug', models.SlugField(blank=True, max_length=155, null=True, verbose_name='Slug')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Описание')),
                ('published', models.DateTimeField(auto_now_add=True, verbose_name='Дата публикации')),
                ('page_title', models.CharField(blank=True, max_length=155, null=True, verbose_name='Page title')),
                ('meta_description', models.TextField(blank=True, null=True, verbose_name='Meta Description')),
                ('main_image', filer.fields.image.FilerImageField(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.FILER_IMAGE_MODEL, verbose_name='Изображение')),
                ('related_products', models.ManyToManyField(related_name='_shop_product_related_products_+', to='shop.Product')),
            ],
            options={
                'verbose_name': 'Продукт',
                'verbose_name_plural': 'Продукты',
            },
        ),
        migrations.CreateModel(
            name='BasketProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1, verbose_name='Количество продукта')),
                ('is_ordered', models.BooleanField(default=False, verbose_name='Заказан')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.product', verbose_name='Продукт')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Зарегистрированный покупатель')),
                ('which_basket', models.ManyToManyField(blank=True, to='shop.Basket', verbose_name='Корзина')),
            ],
            options={
                'verbose_name': 'Продукт в корзине',
                'verbose_name_plural': 'Продукты в корзинах',
            },
        ),
        migrations.AddField(
            model_name='basket',
            name='products',
            field=models.ManyToManyField(to='shop.BasketProduct', verbose_name='Продукты'),
        ),
        migrations.AddField(
            model_name='basket',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Зарегистрированный покупатель'),
        ),
    ]
