# Generated by Django 3.2.5 on 2021-12-16 10:39

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import filer.fields.image


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cms', '0023_auto_20211216_1029'),
        migrations.swappable_dependency(settings.FILER_IMAGE_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=555, verbose_name='Название услуги')),
                ('name_en', models.CharField(max_length=555, null=True, verbose_name='Название услуги')),
                ('name_es', models.CharField(max_length=555, null=True, verbose_name='Название услуги')),
                ('slug', models.SlugField(blank=True, max_length=555, null=True, unique=True, verbose_name='Slug услуги')),
                ('slug_en', models.SlugField(blank=True, max_length=555, null=True, unique=True, verbose_name='Slug услуги')),
                ('slug_es', models.SlugField(blank=True, max_length=555, null=True, unique=True, verbose_name='Slug услуги')),
                ('cost', models.PositiveIntegerField(verbose_name='Цена')),
                ('cost_name', models.CharField(blank=True, max_length=155, null=True, verbose_name='Название к цене')),
                ('cost_name_en', models.CharField(blank=True, max_length=155, null=True, verbose_name='Название к цене')),
                ('cost_name_es', models.CharField(blank=True, max_length=155, null=True, verbose_name='Название к цене')),
                ('duration', models.PositiveIntegerField(default=60, verbose_name='Длительность процедуры')),
                ('teaser_description', ckeditor.fields.RichTextField(blank=True, help_text='Текст который будет описывать услугу на других страницах', null=True, verbose_name='Интро текст')),
                ('teaser_description_en', ckeditor.fields.RichTextField(blank=True, help_text='Текст который будет описывать услугу на других страницах', null=True, verbose_name='Интро текст')),
                ('teaser_description_es', ckeditor.fields.RichTextField(blank=True, help_text='Текст который будет описывать услугу на других страницах', null=True, verbose_name='Интро текст')),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Описание')),
                ('description_en', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Описание')),
                ('description_es', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Описание')),
                ('what_we_offer_description', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Описание блока "плюсы услуг"')),
                ('what_we_offer_description_en', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Описание блока "плюсы услуг"')),
                ('what_we_offer_description_es', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Описание блока "плюсы услуг"')),
                ('what_we_offer_video_url', models.URLField(blank=True, max_length=155, null=True, verbose_name='URL видео блока возле цены')),
                ('h1_title', models.CharField(blank=True, max_length=255, null=True, verbose_name='H1 Заголовок')),
                ('h1_title_en', models.CharField(blank=True, max_length=255, null=True, verbose_name='H1 Заголовок')),
                ('h1_title_es', models.CharField(blank=True, max_length=255, null=True, verbose_name='H1 Заголовок')),
                ('page_title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Seo заголовок страницы')),
                ('page_title_en', models.CharField(blank=True, max_length=255, null=True, verbose_name='Seo заголовок страницы')),
                ('page_title_es', models.CharField(blank=True, max_length=255, null=True, verbose_name='Seo заголовок страницы')),
                ('meta_description', models.TextField(blank=True, null=True, verbose_name='Мета описание')),
                ('meta_description_en', models.TextField(blank=True, null=True, verbose_name='Мета описание')),
                ('meta_description_es', models.TextField(blank=True, null=True, verbose_name='Мета описание')),
                ('header_image', filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='header_image', to=settings.FILER_IMAGE_MODEL, verbose_name='Изображение шапки')),
                ('icon', filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='icon', to=settings.FILER_IMAGE_MODEL, verbose_name='Иконка услуги')),
                ('what_we_offer_image', filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='what_we_offer_image', to=settings.FILER_IMAGE_MODEL, verbose_name='Изображение блока "плюсы услуг"')),
                ('what_we_offer_image_en', filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='what_we_offer_image', to=settings.FILER_IMAGE_MODEL, verbose_name='Изображение блока "плюсы услуг"')),
                ('what_we_offer_image_es', filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='what_we_offer_image', to=settings.FILER_IMAGE_MODEL, verbose_name='Изображение блока "плюсы услуг"')),
            ],
            options={
                'verbose_name': 'Услуга',
                'verbose_name_plural': 'Услуги',
            },
        ),
        migrations.CreateModel(
            name='ServiceRowPluginModel',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='services_servicerowpluginmodel', serialize=False, to='cms.cmsplugin')),
                ('display_type', models.CharField(choices=[('S', 'Simple'), ('B', 'Blocks')], max_length=1, verbose_name='Display type')),
                ('fetch_from_db', models.BooleanField(default=True, verbose_name='Fetch from db?')),
                ('max_count', models.PositiveSmallIntegerField(blank=True, default=6, help_text='How much services to display', null=True, verbose_name='Max')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='ServicePluginModel',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='services_servicepluginmodel', serialize=False, to='cms.cmsplugin')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.service')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='GalleryVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(verbose_name='URL')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.service', verbose_name='Видео')),
            ],
            options={
                'verbose_name': 'Видео для галереи',
                'verbose_name_plural': 'Видео для галереи',
            },
        ),
        migrations.CreateModel(
            name='GalleryImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', filer.fields.image.FilerImageField(on_delete=django.db.models.deletion.CASCADE, to=settings.FILER_IMAGE_MODEL, verbose_name='Изображение')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.service', verbose_name='Услуга')),
            ],
            options={
                'verbose_name': 'Изображение для галереи',
                'verbose_name_plural': 'Изображения для галереи',
            },
        ),
    ]
